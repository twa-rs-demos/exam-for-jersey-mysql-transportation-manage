#%RAML 0.8
title: supermarket-transportation-api
mediaType: application/json


/providers:
  get:
    description: As a admin, I can get all providers so that I can manage them.
    responses:
      200:
        body:
          application/json:
           schema: |
             {
               "$schema": "http://json-schema.org/draft-04/schema#",
               "type": "object",
               "totalCount": {
                 "type": "integer"
               },
               "providers": {
                 "type": "array",
                 "properties": {
                   "id": {
                     "type": "integer"
                   },
                   "name": {
                     "type": "string"
                    }
                 },
                 "required": ["id", "name"]
               }
             }
          example: |
            {
              "totalCount": 2,
              [{
                "id": 1,
                "name": "Super Apple"
               }, {
                "id": 2,
                "name": "Little cookie"
              }]
            }


  post:
    description: As a admin, I can create a provider so that I can buy products from a new provider.
    body:
      application/json:
        schema: |
           {
             "$schema": "http://json-schema.org/draft-04/schema#",
             "type": "object",
             "properties": {
               "name": {
                "type": "string",
                "required": true
               }
             }
           }
        example: |
          {
            "name": "Little Yellow Duck"
          }

    responses:
        201:
          body:
            application/json:
              schema: |
                {
                  "$schema": "http://json-schema.org/draft-04/schema#",
                  "type": "object",
                  "properties": {
                    "provider_url": {
                      "type": "string",
                      "required": true
                    }
                  }
                }
              example: |
                {
                  "provider_id": "providers/3"
                }

  /{id}:
    get:
      description: As a admin, I can get an provider so that I can view its details.
      responses:
        200:
          body:
            application/json:
             schema: |
               {
                 "$schema": "http://json-schema.org/draft-04/schema#",
                 "type": "object",
                 "properties": {
                   "id": {
                     "type": "integer"
                   },
                   "name": {
                     "type": "string"
                    }
                 },
                  "required": ["id", "name"]
               }
            example: |
              {
                "id": 1,
                "name": "Super Apple"
              }

    put:
      description: As a admin, I can update a provider's detail when this provider's detail had changed.
      body:
        application/json:
          schema: |
           {
             "$schema": "http://json-schema.org/draft-04/schema#",
             "type": "object",
             "properties": {
               "id": {
                "type": "string",
                "required": true
               },
               "name": {
                "type": "string",
                "required": true
               }
             }
           }
          example: |
            {
              "id": 1,
              "name": "Little Yellow Duck"
            }
      responses:
        204:


    delete:
      description: As a admin, I can delete a provider when I won't to buy products from it.
        204:

/jobs:
  get:
    description: As a admin, I can get all jobs so that I can manage them.
    responses:
      200:
        body:
          application/json:
            schema: |
              {
                "$schema": "http://json-schema.org/draft-04/schema#",
                "type": "object",
                "required": true,
                "totalCount": {
                  "type": "integer"
                },
                "jobs": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "id": {
                        "type": "integer"
                      },
                      "provider_id": {
                        "type": "integer"
                      },
                      "containers": {
                        "type": "array",
                        "container": {
                          "type": "integer"
                        }
                      },
                      "required": ["name", "id", "containers"]
                    }
                  }
                }
              }
            example: |
              {
                "totalCount": 2,
                "jobs": [
                  {
                    "provider_id": "1",
                    "containers": [1, 2, 3],
                    "id": 1
                  },
                  {
                    "provider_id": "2",
                    "containers": [4, 8, 9],
                    "id": 2
                  }
                ]
              }

  post:
    description: As a admin, I can create a job so that I can transport products from a provider.
    body:
      application/json:
        schema: |
          {
            "$schema": "http://json-schema.org/draft-04/schema#",
            "type": "object",
            "properties": {
              "provider_id": {
                 "type": "integer"
               },
               "containers": {
                 "type": "array",
                 "container": {
                   "type": "integer"
                 }
               }
            }
          }
        example: |
          {
            "provider_id": "2",
            "containers": [4, 8, 9]
          }
    responses:
      201:
        body:
          application/json:
           schema: |
             {
               "$schema": "http://json-schema.org/draft-04/schema#",
               "type": "object",
               "properties": {
                 "job_url": {
                   "type": "string",
                   "required": true
                 }
               }
             }
           example: |
             {
               "job_url": "jobs/2"
             }
  /{id}:
    get:
      description: As a admin, I can get a job so that I can view its details.
      responses:
        200:
          body:
            application/json:
              schema: |
                 {
                  "$schema": "http://json-schema.org/draft-04/schema#",
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "integer"
                    },
                    "provider_id": {
                      "type": "integer"
                    },
                    "containers": {
                      "type": "array",
                      "container": {
                        "type": "integer"
                      }
                    },
                    "required": ["name", "id", "containers"]
                  }
                }
              example: |
                {
                  "provider_id": "1",
                  "containers": [1, 2, 3],
                  "id": 1
                }
    delete:
      description: As a admin, I can delete a job when I won't to discard an order.
      responses:
        204:
          description: delete successfully

    put:
      description: As a admin, I can update a job when I want to add a container into this job.
      body:
        application/json:
          schema: |
            {
              "$schema": "http://json-schema.org/draft-04/schema#",
              "type": "object",
                "properties": {
                 "id": {
                   "type": "integer"
                 },
                 "provider_id": {
                   "type": "integer"
                 },
                 "containers": {
                   "type": "array",
                   "container": {
                     "type": "integer"
                   }
                  }
               },
               "required": ["name", "id", "containers"]
             }
          example: |
            {
              "provider_id": "1",
              "containers": [1, 2, 3, 4, 5],
              "id": 1
             }
      responses:
        204:

/containers:
  get:
    description: As a admin, I can get all containers so that I can manage them.
    responses:
      200:
        body:
          application/json:
            schema: |
              {
                "$schema": "http://json-schema.org/draft-04/schema#",
                "type": "object",
                "required": true,
                "totalCount": {
                  "type": "integer",
                  "required": true
                },
                "containers": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "id": {
                        "type": "integer",
                        "required": true
                      }
                    }
                  }
                }
              }
            example: |
              {
                "totalCount": 2,
                "containers": [
                  {
                    "id": 1
                  },
                  {
                    "id": 2
                  }
                ]
              }

  post:
    description: As a admin, I can create a container so that I can improve transportion capacity.
    body:
      application/json:
        schema: |
          {
            "$schema": "http://json-schema.org/draft-04/schema#",
            "type": "object",
            "properties": {
              "id": {
                "type": "integer",
                "required": true
              }
            }
          }
        example: |
          {
            "id": 4
          }
    responses:
      201:
        body:
          application/json:
           schema: |
             {
               "$schema": "http://json-schema.org/draft-04/schema#",
               "type": "object",
               "properties": {
                 "container_url": {
                   "type": "string",
                   "required": true
                 }
               }
             }
           example: |
             {
               "container_url": "containers/4"
             }
  /{id}:
    get:
      description: As a admin, I can get a container so that I can view its details.
      responses:
        200:
          body:
            application/json:
              schema: |
                {
                  "$schema": "http://json-schema.org/draft-04/schema#",
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "integer",
                      "required": true
                    }
                  }
                }
              example: |
                {
                  "id": 5
                }
    delete:
      description: As a admin, I can delete a container when I want to reduce transportation capacity.
      responses:
        204:
          description: delete successfully

    put:
      description: As a admin, I can update a container when this container detail has changed.
      body:
        application/json:
          schema: |
            {
              "$schema": "http://json-schema.org/draft-04/schema#",
              "type": "object",
                "properties": {
                 "id": {
                   "type": "integer",
                   "required": true
                 }
               }
             }
          example: |
            {
              "id": 5
            }
      responses:
        204:

